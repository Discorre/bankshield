{"ast":null,"code":"// api.js\nimport axios from'axios';const api=axios.create({baseURL:'http://localhost:8000'});// Флаг, чтобы не запускать несколько обновлений одновременно\nlet isRefreshing=false;let failedQueue=[];const processQueue=function(error){let token=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;failedQueue.forEach(prom=>{if(error){prom.reject(error);}else{prom.resolve(token);}});failedQueue=[];};// Перехватчик ответа\napi.interceptors.response.use(res=>res,async error=>{var _error$response;const originalRequest=error.config;// Если access_token истёк\nif(((_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.status)===401&&!originalRequest._retry){originalRequest._retry=true;if(isRefreshing){return new Promise(function(resolve,reject){failedQueue.push({resolve,reject});}).then(token=>{originalRequest.headers['Authorization']=`Bearer ${token}`;return axios(originalRequest);}).catch(err=>Promise.reject(err));}isRefreshing=true;try{const refreshToken=localStorage.getItem('refreshToken');const response=await axios.post('http://localhost:8000/refresh',{},{headers:{'Authorization':refreshToken}});const newAccessToken=response.data.access_token;localStorage.setItem('accessToken',newAccessToken);api.defaults.headers.common['Authorization']=`Bearer ${newAccessToken}`;processQueue(null,newAccessToken);originalRequest.headers['Authorization']=`Bearer ${newAccessToken}`;return api(originalRequest);}catch(err){processQueue(err,null);return Promise.reject(err);}finally{isRefreshing=false;}}return Promise.reject(error);});// Добавим access токен к каждому запросу\napi.interceptors.request.use(config=>{const token=localStorage.getItem('accessToken');if(token){config.headers['Authorization']=`Bearer ${token}`;}return config;},error=>Promise.reject(error));export default api;","map":{"version":3,"names":["axios","api","create","baseURL","isRefreshing","failedQueue","processQueue","error","token","arguments","length","undefined","forEach","prom","reject","resolve","interceptors","response","use","res","_error$response","originalRequest","config","status","_retry","Promise","push","then","headers","catch","err","refreshToken","localStorage","getItem","post","newAccessToken","data","access_token","setItem","defaults","common","request"],"sources":["/home/discorre/vscodeproj/123/bankshield/bankshield-client/src/api/api.js"],"sourcesContent":["// api.js\nimport axios from 'axios';\n\nconst api = axios.create({\n  baseURL: 'http://localhost:8000',\n});\n\n// Флаг, чтобы не запускать несколько обновлений одновременно\nlet isRefreshing = false;\nlet failedQueue = [];\n\nconst processQueue = (error, token = null) => {\n  failedQueue.forEach(prom => {\n    if (error) {\n      prom.reject(error);\n    } else {\n      prom.resolve(token);\n    }\n  });\n  failedQueue = [];\n};\n\n// Перехватчик ответа\napi.interceptors.response.use(\n  res => res,\n  async error => {\n    const originalRequest = error.config;\n\n    // Если access_token истёк\n    if (error.response?.status === 401 && !originalRequest._retry) {\n      originalRequest._retry = true;\n\n      if (isRefreshing) {\n        return new Promise(function (resolve, reject) {\n          failedQueue.push({ resolve, reject });\n        }).then(token => {\n          originalRequest.headers['Authorization'] = `Bearer ${token}`;\n          return axios(originalRequest);\n        }).catch(err => Promise.reject(err));\n      }\n\n      isRefreshing = true;\n\n      try {\n        const refreshToken = localStorage.getItem('refreshToken');\n        const response = await axios.post('http://localhost:8000/refresh', {}, {\n          headers: {\n            'Authorization': refreshToken,\n          },\n        });\n\n        const newAccessToken = response.data.access_token;\n        localStorage.setItem('accessToken', newAccessToken);\n\n        api.defaults.headers.common['Authorization'] = `Bearer ${newAccessToken}`;\n        processQueue(null, newAccessToken);\n\n        originalRequest.headers['Authorization'] = `Bearer ${newAccessToken}`;\n        return api(originalRequest);\n      } catch (err) {\n        processQueue(err, null);\n        return Promise.reject(err);\n      } finally {\n        isRefreshing = false;\n      }\n    }\n\n    return Promise.reject(error);\n  }\n);\n\n// Добавим access токен к каждому запросу\napi.interceptors.request.use(\n  config => {\n    const token = localStorage.getItem('accessToken');\n    if (token) {\n      config.headers['Authorization'] = `Bearer ${token}`;\n    }\n    return config;\n  },\n  error => Promise.reject(error)\n);\n\nexport default api;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}