{"ast":null,"code":"import React,{useState,useContext}from'react';import{CartContext}from'../App';import{useNavigate}from'react-router-dom';import api from'../api/api';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ChangePassword=()=>{const{user}=useContext(CartContext);const[oldPassword,setOldPassword]=useState('');const[newPassword,setNewPassword]=useState('');const[passwordError,setPasswordError]=useState('');const navigate=useNavigate();const passwordRegex=/(?=.*[0-9])(?=.*[!@#$%^&*])(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z!@#$%^&*]{6,}/;const handleNewPasswordChange=e=>{const newPassword=e.target.value;setNewPassword(newPassword);if(!passwordRegex.test(newPassword)){setPasswordError('Пароль должен содержать минимум 6 символов, включая цифру, заглавную и строчную буквы, а также спецсимвол (!@#$%^&*).');}else{setPasswordError('');}};const handleSubmit=e=>{e.preventDefault();if(!user){alert('Пожалуйста, войдите в аккаунт.');return;}if(passwordError)return;const accessToken=localStorage.getItem('accessToken');api.patch('http://localhost:8000/api/v1/change_password',{old_password:oldPassword,new_password:newPassword},{headers:{Authorization:`Bearer ${accessToken}`}}).then(()=>alert('Пароль успешно изменён')).catch(error=>{if(error.response.status===401){alert('Сессия истекла. Авторизуйтесь снова');navigate('/login');}else{alert('Ошибка: '+error.response.data.detail);}});};return/*#__PURE__*/_jsxs(\"div\",{className:\"form-container\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"\\u0421\\u043C\\u0435\\u043D\\u0430 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044F\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"input\",{type:\"password\",placeholder:\"\\u0421\\u0442\\u0430\\u0440\\u044B\\u0439 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\",value:oldPassword,onChange:e=>setOldPassword(e.target.value),required:true}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",placeholder:\"\\u041D\\u043E\\u0432\\u044B\\u0439 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\",value:newPassword,onChange:handleNewPasswordChange,required:true}),passwordError&&/*#__PURE__*/_jsx(\"p\",{className:\"error-message\",children:passwordError}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",disabled:!!passwordError,children:\"\\u0421\\u043C\\u0435\\u043D\\u0438\\u0442\\u044C \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\"})]})]});};export default ChangePassword;","map":{"version":3,"names":["React","useState","useContext","CartContext","useNavigate","api","jsx","_jsx","jsxs","_jsxs","ChangePassword","user","oldPassword","setOldPassword","newPassword","setNewPassword","passwordError","setPasswordError","navigate","passwordRegex","handleNewPasswordChange","e","target","value","test","handleSubmit","preventDefault","alert","accessToken","localStorage","getItem","patch","old_password","new_password","headers","Authorization","then","catch","error","response","status","data","detail","className","children","onSubmit","type","placeholder","onChange","required","disabled"],"sources":["/home/discorre/vscodeproj/123/bankshield/bankshield-client/src/pages/ChangePassword.js"],"sourcesContent":["import React, { useState, useContext } from 'react';\nimport { CartContext } from '../App';\nimport { useNavigate } from 'react-router-dom';\nimport api from '../api/api';\n\nconst ChangePassword = () => {\n  const { user } = useContext(CartContext);\n  const [oldPassword, setOldPassword] = useState('');\n  const [newPassword, setNewPassword] = useState('');\n  const [passwordError, setPasswordError] = useState('');\n  const navigate = useNavigate();\n\n  const passwordRegex = /(?=.*[0-9])(?=.*[!@#$%^&*])(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z!@#$%^&*]{6,}/;\n\n  const handleNewPasswordChange = (e) => {\n    const newPassword = e.target.value;\n    setNewPassword(newPassword);\n    \n    if (!passwordRegex.test(newPassword)) {\n      setPasswordError('Пароль должен содержать минимум 6 символов, включая цифру, заглавную и строчную буквы, а также спецсимвол (!@#$%^&*).');\n    } else {\n      setPasswordError('');\n    }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (!user) {\n      alert('Пожалуйста, войдите в аккаунт.');\n      return;\n    }\n    if (passwordError) return;\n    \n    const accessToken = localStorage.getItem('accessToken');\n    api.patch('http://localhost:8000/api/v1/change_password', {\n        old_password: oldPassword,\n        new_password: newPassword\n      }, {\n        headers: { Authorization: `Bearer ${accessToken}` }\n      })\n      .then(() => alert('Пароль успешно изменён'))\n      .catch(error => {\n        if (error.response.status === 401) {\n          alert('Сессия истекла. Авторизуйтесь снова');\n          navigate('/login');\n        } else {\n          alert('Ошибка: ' + error.response.data.detail);\n        }\n      });\n  };\n\n  return (\n    <div className=\"form-container\">\n      <h2>Смена пароля</h2>\n      <form onSubmit={handleSubmit}>\n        <input \n          type=\"password\" \n          placeholder=\"Старый пароль\" \n          value={oldPassword} \n          onChange={e => setOldPassword(e.target.value)} \n          required \n        />\n        <input \n          type=\"password\" \n          placeholder=\"Новый пароль\" \n          value={newPassword} \n          onChange={handleNewPasswordChange} \n          required \n        />\n        {passwordError && <p className=\"error-message\">{passwordError}</p>}\n        <button type=\"submit\" disabled={!!passwordError}>Сменить пароль</button>\n      </form>\n    </div>\n  );\n};\n\nexport default ChangePassword;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,UAAU,KAAQ,OAAO,CACnD,OAASC,WAAW,KAAQ,QAAQ,CACpC,OAASC,WAAW,KAAQ,kBAAkB,CAC9C,MAAO,CAAAC,GAAG,KAAM,YAAY,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE7B,KAAM,CAAAC,cAAc,CAAGA,CAAA,GAAM,CAC3B,KAAM,CAAEC,IAAK,CAAC,CAAGT,UAAU,CAACC,WAAW,CAAC,CACxC,KAAM,CAACS,WAAW,CAAEC,cAAc,CAAC,CAAGZ,QAAQ,CAAC,EAAE,CAAC,CAClD,KAAM,CAACa,WAAW,CAAEC,cAAc,CAAC,CAAGd,QAAQ,CAAC,EAAE,CAAC,CAClD,KAAM,CAACe,aAAa,CAAEC,gBAAgB,CAAC,CAAGhB,QAAQ,CAAC,EAAE,CAAC,CACtD,KAAM,CAAAiB,QAAQ,CAAGd,WAAW,CAAC,CAAC,CAE9B,KAAM,CAAAe,aAAa,CAAG,0EAA0E,CAEhG,KAAM,CAAAC,uBAAuB,CAAIC,CAAC,EAAK,CACrC,KAAM,CAAAP,WAAW,CAAGO,CAAC,CAACC,MAAM,CAACC,KAAK,CAClCR,cAAc,CAACD,WAAW,CAAC,CAE3B,GAAI,CAACK,aAAa,CAACK,IAAI,CAACV,WAAW,CAAC,CAAE,CACpCG,gBAAgB,CAAC,uHAAuH,CAAC,CAC3I,CAAC,IAAM,CACLA,gBAAgB,CAAC,EAAE,CAAC,CACtB,CACF,CAAC,CAED,KAAM,CAAAQ,YAAY,CAAIJ,CAAC,EAAK,CAC1BA,CAAC,CAACK,cAAc,CAAC,CAAC,CAClB,GAAI,CAACf,IAAI,CAAE,CACTgB,KAAK,CAAC,gCAAgC,CAAC,CACvC,OACF,CACA,GAAIX,aAAa,CAAE,OAEnB,KAAM,CAAAY,WAAW,CAAGC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC,CACvDzB,GAAG,CAAC0B,KAAK,CAAC,8CAA8C,CAAE,CACtDC,YAAY,CAAEpB,WAAW,CACzBqB,YAAY,CAAEnB,WAChB,CAAC,CAAE,CACDoB,OAAO,CAAE,CAAEC,aAAa,CAAE,UAAUP,WAAW,EAAG,CACpD,CAAC,CAAC,CACDQ,IAAI,CAAC,IAAMT,KAAK,CAAC,wBAAwB,CAAC,CAAC,CAC3CU,KAAK,CAACC,KAAK,EAAI,CACd,GAAIA,KAAK,CAACC,QAAQ,CAACC,MAAM,GAAK,GAAG,CAAE,CACjCb,KAAK,CAAC,qCAAqC,CAAC,CAC5CT,QAAQ,CAAC,QAAQ,CAAC,CACpB,CAAC,IAAM,CACLS,KAAK,CAAC,UAAU,CAAGW,KAAK,CAACC,QAAQ,CAACE,IAAI,CAACC,MAAM,CAAC,CAChD,CACF,CAAC,CAAC,CACN,CAAC,CAED,mBACEjC,KAAA,QAAKkC,SAAS,CAAC,gBAAgB,CAAAC,QAAA,eAC7BrC,IAAA,OAAAqC,QAAA,CAAI,qEAAY,CAAI,CAAC,cACrBnC,KAAA,SAAMoC,QAAQ,CAAEpB,YAAa,CAAAmB,QAAA,eAC3BrC,IAAA,UACEuC,IAAI,CAAC,UAAU,CACfC,WAAW,CAAC,2EAAe,CAC3BxB,KAAK,CAAEX,WAAY,CACnBoC,QAAQ,CAAE3B,CAAC,EAAIR,cAAc,CAACQ,CAAC,CAACC,MAAM,CAACC,KAAK,CAAE,CAC9C0B,QAAQ,MACT,CAAC,cACF1C,IAAA,UACEuC,IAAI,CAAC,UAAU,CACfC,WAAW,CAAC,qEAAc,CAC1BxB,KAAK,CAAET,WAAY,CACnBkC,QAAQ,CAAE5B,uBAAwB,CAClC6B,QAAQ,MACT,CAAC,CACDjC,aAAa,eAAIT,IAAA,MAAGoC,SAAS,CAAC,eAAe,CAAAC,QAAA,CAAE5B,aAAa,CAAI,CAAC,cAClET,IAAA,WAAQuC,IAAI,CAAC,QAAQ,CAACI,QAAQ,CAAE,CAAC,CAAClC,aAAc,CAAA4B,QAAA,CAAC,iFAAc,CAAQ,CAAC,EACpE,CAAC,EACJ,CAAC,CAEV,CAAC,CAED,cAAe,CAAAlC,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}